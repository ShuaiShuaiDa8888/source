<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="183d473b-537b-439c-8647-2a9b8c1f590c" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/compiler.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/kotlinc.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__ch_qos_logback_logback_classic_1_2_3.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__ch_qos_logback_logback_core_1_2_3.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_101tec_zkclient_0_10.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_alibaba_dubbo_2_6_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_fasterxml_classmate_1_3_4.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_annotations_2_9_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_9_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_databind_2_9_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_9_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_9_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_fasterxml_jackson_module_jackson_module_parameter_names_2_9_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_github_jsqlparser_jsqlparser_1_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_github_pagehelper_pagehelper_5_1_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_github_pagehelper_pagehelper_spring_boot_autoconfigure_1_2_7.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_github_pagehelper_pagehelper_spring_boot_starter_1_2_7.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_google_guava_guava_16_0_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_google_protobuf_protobuf_java_2_6_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_jayway_jsonpath_json_path_2_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_lmax_disruptor_3_4_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__com_zaxxer_HikariCP_2_7_9.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__commons_beanutils_commons_beanutils_1_9_3.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__commons_collections_commons_collections_3_2_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__io_netty_netty_3_10_6_Final.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__javax_annotation_javax_annotation_api_1_3_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__javax_servlet_javax_servlet_api_4_0_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__javax_servlet_jsp_javax_servlet_jsp_api_2_3_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__javax_servlet_jstl_1_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__javax_validation_validation_api_2_0_1_Final.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__jline_jline_0_9_94.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__junit_junit_4_12.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__log4j_log4j_1_2_16.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__log4j_log4j_1_2_17.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__mysql_mysql_connector_java_8_0_11.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__mysql_mysql_connector_java_8_0_12.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_1_7_9.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__net_bytebuddy_byte_buddy_agent_1_7_9.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__net_minidev_accessors_smart_1_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__net_minidev_json_smart_2_3.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_activemq_activemq_all_5_15_4.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_activemq_activemq_client_5_15_4.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_activemq_activemq_jms_pool_5_15_4.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_activemq_activemq_pool_5_15_4.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_commons_commons_pool2_2_4_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_curator_curator_client_2_12_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_curator_curator_framework_2_12_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_curator_curator_recipes_2_12_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_geronimo_specs_geronimo_j2ee_management_1_1_spec_1_0_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_geronimo_specs_geronimo_jms_1_1_spec_1_1_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_geronimo_specs_geronimo_jta_1_0_1B_spec_1_0_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_api_2_10_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_api_2_11_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_core_2_11_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_logging_log4j_log4j_to_slf4j_2_10_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_cache_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_config_core_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_config_ogdl_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_core_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_crypto_cipher_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_crypto_core_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_crypto_hash_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_event_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_lang_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_spring_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_shiro_shiro_web_1_4_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_core_9_0_11.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_el_9_0_11.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_jasper_9_0_11.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_tomcat_embed_tomcat_embed_websocket_8_5_32.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_tomcat_tomcat_annotations_api_9_0_11.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_zookeeper_zookeeper_3_4_10.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_zookeeper_zookeeper_3_4_10_pom.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_apache_zookeeper_zookeeper_pom_3_4_10.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_aspectj_aspectjweaver_1_8_13.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_assertj_assertj_core_3_9_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_eclipse_jdt_ecj_3_13_102.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_freemarker_freemarker_2_3_28.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_fusesource_hawtbuf_hawtbuf_1_11.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_hamcrest_hamcrest_library_1_3.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_hibernate_validator_hibernate_validator_6_0_11_Final.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_javassist_javassist_3_22_0_GA.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_jboss_logging_jboss_logging_3_3_2_Final.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_jboss_netty_netty_3_2_5_Final.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_mockito_mockito_core_2_15_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_mybatis_mybatis_3_4_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_mybatis_mybatis_spring_1_3_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_mybatis_spring_boot_mybatis_spring_boot_autoconfigure_1_3_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_mybatis_spring_boot_mybatis_spring_boot_starter_1_3_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_objenesis_objenesis_2_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_ow2_asm_asm_5_0_4.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_projectlombok_lombok_1_18_2.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_skyscreamer_jsonassert_1_5_0.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_slf4j_jul_to_slf4j_1_7_25.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_25.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_slf4j_slf4j_api_1_7_6.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_slf4j_slf4j_log4j12_1_6_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_slf4j_slf4j_log4j12_1_7_25.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_autoconfigure_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_devtools_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_gradle_plugin_pom_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_aop_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_freemarker_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_jdbc_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_json_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_logging_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_parent_pom_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_test_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_tomcat_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_starter_web_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_boot_spring_boot_test_autoconfigure_2_0_4_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_aop_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_aop_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_aspects_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_beans_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_beans_5_0_7_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_beans_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_context_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_context_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_context_support_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_context_support_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_core_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_core_5_0_7_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_core_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_expression_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_expression_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_jcl_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_jcl_5_0_7_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_jcl_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_jdbc_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_jdbc_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_jms_5_0_7_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_messaging_5_0_7_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_test_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_tx_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_tx_5_0_7_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_tx_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_web_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_web_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_webmvc_5_0_6_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_springframework_spring_webmvc_5_0_8_RELEASE.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_xmlunit_xmlunit_core_2_5_1.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Gradle__org_yaml_snakeyaml_1_19.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/vcs.xml" />
    </list>
    <ignored path="$PROJECT_DIR$/../.gradle/" />
    <ignored path="$PROJECT_DIR$/../dubbo/.gradle/" />
    <ignored path="$PROJECT_DIR$/../mq/.gradle/" />
    <ignored path="$PROJECT_DIR$/../mq/build/" />
    <ignored path="$PROJECT_DIR$/../shiro-ssm/.gradle/" />
    <ignored path="$PROJECT_DIR$/../shiro-ssm/build/" />
    <ignored path="$PROJECT_DIR$/.gradle/" />
    <ignored path="$PROJECT_DIR$/build/" />
    <ignored path="$PROJECT_DIR$/../springboot-datasource/.gradle/" />
    <ignored path="$PROJECT_DIR$/../springboot-datasource/build/" />
    <ignored path="$PROJECT_DIR$/../TheGirl/.gradle/" />
    <ignored path="$PROJECT_DIR$/../TheGirl/build/" />
    <ignored path="$PROJECT_DIR$/../dubbo/dubbo-simple/.gradle/" />
    <ignored path="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer/.gradle/" />
    <ignored path="$PROJECT_DIR$/../dubbo/dubbo-simple/provider/.gradle/" />
    <ignored path="$PROJECT_DIR$/../dubbo/dubbo-simple/provider/build/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="build.gradle" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build.gradle">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="95">
              <caret line="20" column="160" lean-forward="false" selection-start-line="20" selection-start-column="84" selection-end-line="20" selection-end-column="160" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="AsyncServiceImpl.java" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/service/impl/AsyncServiceImpl.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="225">
              <caret line="12" column="13" lean-forward="false" selection-start-line="12" selection-start-column="13" selection-end-line="12" selection-end-column="13" />
              <folding>
                <element signature="imports" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GradleExtensions">
    <project path="$PROJECT_DIR$">
      <sub-project>
        <project path="$PROJECT_DIR$/..">
          <extensions>
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../TheGirl">
          <extensions parent="$PROJECT_DIR$/..">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':TheGirl'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="cleanIdea" type="org.gradle.api.tasks.Delete">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':TheGirl'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':TheGirl'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':TheGirl'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':TheGirl'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':TheGirl'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':TheGirl'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':TheGirl'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':TheGirl'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="war" type="org.gradle.api.tasks.bundling.War">Generates a war archive with all the compiled classes, the web-app content and the libraries.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../dubbo">
          <extensions parent="$PROJECT_DIR$/..">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../dubbo/dubbo-simple">
          <extensions parent="$PROJECT_DIR$/../dubbo">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer">
          <extensions parent="$PROJECT_DIR$/../dubbo/dubbo-simple">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../dubbo/dubbo-simple/provider">
          <extensions parent="$PROJECT_DIR$/../dubbo/dubbo-simple">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':dubbo:dubbo-simple:provider'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="cleanIdea" type="org.gradle.api.tasks.Delete">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':dubbo:dubbo-simple:provider'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':dubbo:dubbo-simple:provider'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':dubbo:dubbo-simple:provider'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':dubbo:dubbo-simple:provider'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':dubbo:dubbo-simple:provider'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':dubbo:dubbo-simple:provider'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':dubbo:dubbo-simple:provider'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':dubbo:dubbo-simple:provider'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="war" type="org.gradle.api.tasks.bundling.War">Generates a war archive with all the compiled classes, the web-app content and the libraries.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../mq">
          <extensions parent="$PROJECT_DIR$/..">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':mq'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="cleanIdea" type="org.gradle.api.tasks.Delete">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':mq'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':mq'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':mq'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':mq'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':mq'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':mq'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':mq'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':mq'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="war" type="org.gradle.api.tasks.bundling.War">Generates a war archive with all the compiled classes, the web-app content and the libraries.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../shiro-ssm">
          <extensions parent="$PROJECT_DIR$/..">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':shiro-ssm'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="cleanIdea" type="org.gradle.api.tasks.Delete">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':shiro-ssm'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':shiro-ssm'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':shiro-ssm'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':shiro-ssm'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':shiro-ssm'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':shiro-ssm'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':shiro-ssm'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':shiro-ssm'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="war" type="org.gradle.api.tasks.bundling.War">Generates a war archive with all the compiled classes, the web-app content and the libraries.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$">
          <extensions parent="$PROJECT_DIR$/..">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':spring-boot'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':spring-boot'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':spring-boot'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':spring-boot'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':spring-boot'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':spring-boot'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="cleanIdea" type="org.gradle.api.tasks.Delete">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="war" type="org.gradle.api.tasks.bundling.War">Generates a war archive with all the compiled classes, the web-app content and the libraries.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':spring-boot'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':spring-boot'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':spring-boot'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
        <project path="$PROJECT_DIR$/../springboot-datasource">
          <extensions parent="$PROJECT_DIR$/..">
            <ext name="ext" type="org.gradle.api.internal.plugins.DefaultExtraPropertiesExtension" />
            <ext name="defaultArtifacts" type="org.gradle.api.internal.plugins.DefaultArtifactPublicationSet" />
            <ext name="reporting" type="org.gradle.api.reporting.ReportingExtension" />
            <ext name="sourceSets" type="org.gradle.api.internal.tasks.DefaultSourceSetContainer" objectType="org.gradle.api.internal.tasks.DefaultSourceSet" />
            <ext name="java" type="org.gradle.api.plugins.internal.DefaultJavaPluginExtension" />
            <task name="assemble">Assembles the outputs of this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="build">Assembles and tests this project.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildDependents">Assembles and tests this project and all projects that depend on it.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="buildEnvironment" type="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask">Displays all buildscript dependencies declared in project ':springboot-datasource'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="buildNeeded">Assembles and tests this project and all projects it depends on.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="check">Runs all checks.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="classes">Assembles main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="clean" type="org.gradle.api.tasks.Delete">Deletes the build directory.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="cleanIdea" type="org.gradle.api.tasks.Delete">Cleans IDEA project files (IML, IPR)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="cleanIdeaModule" type="org.gradle.api.tasks.Delete">&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles main Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="compileTestJava" type="org.gradle.api.tasks.compile.JavaCompile">Compiles test Java source.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="components" type="org.gradle.api.reporting.components.ComponentReport">Displays the components produced by project ':springboot-datasource'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencies" type="org.gradle.api.tasks.diagnostics.DependencyReportTask">Displays all dependencies declared in project ':springboot-datasource'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependencyInsight" type="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask">Displays the insight into a specific dependency in project ':springboot-datasource'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="dependentComponents" type="org.gradle.api.reporting.dependents.DependentComponentsReport">Displays the dependent components of components in project ':springboot-datasource'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="help" type="org.gradle.configuration.Help">Displays a help message.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="idea">Generates IDEA project files (IML, IPR, IWS)&lt;p&gt;&lt;i&gt;Task group: IDE&lt;i&gt;</task>
            <task name="ideaModule" type="org.gradle.plugins.ide.idea.GenerateIdeaModule">Generates IDEA module files (IML)&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="jar" type="org.gradle.api.tasks.bundling.Jar">Assembles a jar archive containing the main classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="javadoc" type="org.gradle.api.tasks.javadoc.Javadoc">Generates Javadoc API documentation for the main source code.&lt;p&gt;&lt;i&gt;Task group: documentation&lt;i&gt;</task>
            <task name="model" type="org.gradle.api.reporting.model.ModelReport">Displays the configuration model of project ':springboot-datasource'. [incubating]&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="processResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes main resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="processTestResources" type="org.gradle.language.jvm.tasks.ProcessResources">Processes test resources.&lt;p&gt;&lt;i&gt;Task group: other&lt;i&gt;</task>
            <task name="projects" type="org.gradle.api.tasks.diagnostics.ProjectReportTask">Displays the sub-projects of project ':springboot-datasource'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="properties" type="org.gradle.api.tasks.diagnostics.PropertyReportTask">Displays the properties of project ':springboot-datasource'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="tasks" type="org.gradle.api.tasks.diagnostics.TaskReportTask">Displays the tasks runnable from project ':springboot-datasource'.&lt;p&gt;&lt;i&gt;Task group: help&lt;i&gt;</task>
            <task name="test" type="org.gradle.api.tasks.testing.Test">Runs the unit tests.&lt;p&gt;&lt;i&gt;Task group: verification&lt;i&gt;</task>
            <task name="testClasses">Assembles test classes.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <task name="war" type="org.gradle.api.tasks.bundling.War">Generates a war archive with all the compiled classes, the web-app content and the libraries.&lt;p&gt;&lt;i&gt;Task group: build&lt;i&gt;</task>
            <conf name="annotationProcessor" visible="false">Annotation processors and their dependencies for source set 'main'.</conf>
            <conf name="apiElements" visible="false">API elements for main.</conf>
            <conf name="archives">Configuration for archive artifacts.</conf>
            <conf name="compile" visible="false">Dependencies for source set 'main' (deprecated, use 'implementation' instead).</conf>
            <conf name="compileClasspath" visible="false">Compile classpath for source set 'main'.</conf>
            <conf name="compileOnly" visible="false">Compile only dependencies for source set 'main'.</conf>
            <conf name="default">Configuration for default artifacts.</conf>
            <conf name="implementation" visible="false">Implementation only dependencies for source set 'main'.</conf>
            <conf name="providedCompile" visible="false">Additional compile classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="providedRuntime" visible="false">Additional runtime classpath for libraries that should not be part of the WAR archive.</conf>
            <conf name="runtime" visible="false">Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly' instead).</conf>
            <conf name="runtimeClasspath" visible="false">Runtime classpath of source set 'main'.</conf>
            <conf name="runtimeElements" visible="false">Elements of runtime for main.</conf>
            <conf name="runtimeOnly" visible="false">Runtime only dependencies for source set 'main'.</conf>
            <conf name="testAnnotationProcessor" visible="false">Annotation processors and their dependencies for source set 'test'.</conf>
            <conf name="testCompile" visible="false">Dependencies for source set 'test' (deprecated, use 'testImplementation' instead).</conf>
            <conf name="testCompileClasspath" visible="false">Compile classpath for source set 'test'.</conf>
            <conf name="testCompileOnly" visible="false">Compile only dependencies for source set 'test'.</conf>
            <conf name="testImplementation" visible="false">Implementation only dependencies for source set 'test'.</conf>
            <conf name="testRuntime" visible="false">Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly' instead).</conf>
            <conf name="testRuntimeClasspath" visible="false">Runtime classpath of source set 'test'.</conf>
            <conf name="testRuntimeOnly" visible="false">Runtime only dependencies for source set 'test'.</conf>
            <conf name="classpath" scriptClasspath="true" />
          </extensions>
        </project>
      </sub-project>
    </project>
  </component>
  <component name="GradleLocalSettings">
    <option name="myGradleHomes">
      <map>
        <entry key="$PROJECT_DIR$" value="E:\BigData\gradle-4.10" />
      </map>
    </option>
    <option name="myGradleVersions">
      <map>
        <entry key="$PROJECT_DIR$" value="4.10" />
      </map>
    </option>
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="source" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="source" />
                <option name="path" value="$PROJECT_DIR$/.." />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":dubbo" />
                <option name="path" value="$PROJECT_DIR$/../dubbo" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":mq" />
                <option name="path" value="$PROJECT_DIR$/../mq" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":shiro-ssm" />
                <option name="path" value="$PROJECT_DIR$/../shiro-ssm" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":spring-boot" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":springboot-datasource" />
                <option name="path" value="$PROJECT_DIR$/../springboot-datasource" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":TheGirl" />
                <option name="path" value="$PROJECT_DIR$/../TheGirl" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":dubbo:dubbo-simple" />
                <option name="path" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":dubbo:dubbo-simple:consumer" />
                <option name="path" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value=":dubbo:dubbo-simple:provider" />
                <option name="path" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="availableTasks">
      <map>
        <entry key="$PROJECT_DIR$/..">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in root project 'source'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by root project 'source'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in root project 'source'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in root project 'source'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in root project 'source'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Initializes a new Gradle build." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="init" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of root project 'source'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of root project 'source'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of root project 'source'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from root project 'source' (some of the displayed tasks may belong to subprojects)." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="war" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Gradle wrapper files." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/.." />
                <option name="name" value="wrapper" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../TheGirl">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':TheGirl'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':TheGirl'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':TheGirl'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':TheGirl'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':TheGirl'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':TheGirl'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':TheGirl'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':TheGirl'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':TheGirl'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../TheGirl" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../dubbo">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':dubbo'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':dubbo'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':dubbo'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':dubbo'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':dubbo'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':dubbo'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':dubbo'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':dubbo'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':dubbo' (some of the displayed tasks may belong to subprojects)." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../dubbo/dubbo-simple">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':dubbo:dubbo-simple'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':dubbo:dubbo-simple'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':dubbo:dubbo-simple'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':dubbo:dubbo-simple'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':dubbo:dubbo-simple'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':dubbo:dubbo-simple'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':dubbo:dubbo-simple'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':dubbo:dubbo-simple'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':dubbo:dubbo-simple' (some of the displayed tasks may belong to subprojects)." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':dubbo:dubbo-simple:consumer'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':dubbo:dubbo-simple:consumer'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':dubbo:dubbo-simple:consumer'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':dubbo:dubbo-simple:consumer'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':dubbo:dubbo-simple:consumer'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':dubbo:dubbo-simple:consumer'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':dubbo:dubbo-simple:consumer'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':dubbo:dubbo-simple:consumer'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':dubbo:dubbo-simple:consumer'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../dubbo/dubbo-simple/provider">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':dubbo:dubbo-simple:provider'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':dubbo:dubbo-simple:provider'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':dubbo:dubbo-simple:provider'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':dubbo:dubbo-simple:provider'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':dubbo:dubbo-simple:provider'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':dubbo:dubbo-simple:provider'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':dubbo:dubbo-simple:provider'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':dubbo:dubbo-simple:provider'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':dubbo:dubbo-simple:provider'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../mq">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':mq'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':mq'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':mq'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':mq'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':mq'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':mq'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':mq'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':mq'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':mq'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../mq" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../shiro-ssm">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':shiro-ssm'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':shiro-ssm'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':shiro-ssm'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':shiro-ssm'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':shiro-ssm'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':shiro-ssm'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':shiro-ssm'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':shiro-ssm'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':shiro-ssm'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../shiro-ssm" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':spring-boot'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':spring-boot'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':spring-boot'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':spring-boot'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':spring-boot'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':spring-boot'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':spring-boot'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':spring-boot'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':spring-boot'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../springboot-datasource">
          <value>
            <list>
              <ExternalTaskPojo>
                <option name="description" value="Assembles the outputs of this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="assemble" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="build" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects that depend on it." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="buildDependents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all buildscript dependencies declared in project ':springboot-datasource'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="buildEnvironment" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles and tests this project and all projects it depends on." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="buildNeeded" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs all checks." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="check" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="classes" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Deletes the build directory." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="clean" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles main Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="compileJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Compiles test Java source." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="compileTestJava" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the components produced by project ':springboot-datasource'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="components" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays all dependencies declared in project ':springboot-datasource'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="dependencies" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the insight into a specific dependency in project ':springboot-datasource'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="dependencyInsight" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the dependent components of components in project ':springboot-datasource'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="dependentComponents" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays a help message." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="help" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles a jar archive containing the main classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="jar" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates Javadoc API documentation for the main source code." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="javadoc" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the configuration model of project ':springboot-datasource'. [incubating]" />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="model" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes main resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="processResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Processes test resources." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="processTestResources" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the sub-projects of project ':springboot-datasource'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="projects" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the properties of project ':springboot-datasource'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="properties" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Displays the tasks runnable from project ':springboot-datasource'." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="tasks" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Runs the unit tests." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="test" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Assembles test classes." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="testClasses" />
              </ExternalTaskPojo>
              <ExternalTaskPojo>
                <option name="description" value="Generates a war archive with all the compiled classes, the web-app content and the libraries." />
                <option name="linkedExternalProjectPath" value="$PROJECT_DIR$/../springboot-datasource" />
                <option name="name" value="war" />
              </ExternalTaskPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="projectBuildClasspath">
      <map>
        <entry key="$PROJECT_DIR$">
          <value>
            <ExternalProjectBuildClasspathPojo>
              <option name="modulesBuildClasspath">
                <map>
                  <entry key="$PROJECT_DIR$/..">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/.." />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../TheGirl">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../TheGirl" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../dubbo">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../dubbo" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../dubbo/dubbo-simple">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../dubbo/dubbo-simple" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../dubbo/dubbo-simple/consumer" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../dubbo/dubbo-simple/provider">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../dubbo/dubbo-simple/provider" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../mq">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../mq" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../shiro-ssm">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../shiro-ssm" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                  <entry key="$PROJECT_DIR$/../springboot-datasource">
                    <value>
                      <ExternalModuleBuildClasspathPojo>
                        <option name="path" value="$PROJECT_DIR$/../springboot-datasource" />
                      </ExternalModuleBuildClasspathPojo>
                    </value>
                  </entry>
                </map>
              </option>
              <option name="name" value="source" />
              <option name="projectBuildClasspath">
                <list>
                  <option value="E:/BigData/gradle-4.10/src/announce" />
                  <option value="E:/BigData/gradle-4.10/src/antlr" />
                  <option value="E:/BigData/gradle-4.10/src/base-services" />
                  <option value="E:/BigData/gradle-4.10/src/base-services-groovy" />
                  <option value="E:/BigData/gradle-4.10/src/build-cache" />
                  <option value="E:/BigData/gradle-4.10/src/build-cache-http" />
                  <option value="E:/BigData/gradle-4.10/src/build-comparison" />
                  <option value="E:/BigData/gradle-4.10/src/build-init" />
                  <option value="E:/BigData/gradle-4.10/src/build-option" />
                  <option value="E:/BigData/gradle-4.10/src/cli" />
                  <option value="E:/BigData/gradle-4.10/src/code-quality" />
                  <option value="E:/BigData/gradle-4.10/src/composite-builds" />
                  <option value="E:/BigData/gradle-4.10/src/core" />
                  <option value="E:/BigData/gradle-4.10/src/core-api" />
                  <option value="E:/BigData/gradle-4.10/src/dependency-management" />
                  <option value="E:/BigData/gradle-4.10/src/diagnostics" />
                  <option value="E:/BigData/gradle-4.10/src/docs" />
                  <option value="E:/BigData/gradle-4.10/src/ear" />
                  <option value="E:/BigData/gradle-4.10/src/ide" />
                  <option value="E:/BigData/gradle-4.10/src/ide-native" />
                  <option value="E:/BigData/gradle-4.10/src/ide-play" />
                  <option value="E:/BigData/gradle-4.10/src/installation-beacon" />
                  <option value="E:/BigData/gradle-4.10/src/internal-android-performance-testing" />
                  <option value="E:/BigData/gradle-4.10/src/internal-integ-testing" />
                  <option value="E:/BigData/gradle-4.10/src/internal-performance-testing" />
                  <option value="E:/BigData/gradle-4.10/src/internal-testing" />
                  <option value="E:/BigData/gradle-4.10/src/ivy" />
                  <option value="E:/BigData/gradle-4.10/src/jacoco" />
                  <option value="E:/BigData/gradle-4.10/src/javascript" />
                  <option value="E:/BigData/gradle-4.10/src/jvm-services" />
                  <option value="E:/BigData/gradle-4.10/src/language-groovy" />
                  <option value="E:/BigData/gradle-4.10/src/language-java" />
                  <option value="E:/BigData/gradle-4.10/src/language-jvm" />
                  <option value="E:/BigData/gradle-4.10/src/language-native" />
                  <option value="E:/BigData/gradle-4.10/src/language-scala" />
                  <option value="E:/BigData/gradle-4.10/src/launcher" />
                  <option value="E:/BigData/gradle-4.10/src/logging" />
                  <option value="E:/BigData/gradle-4.10/src/maven" />
                  <option value="E:/BigData/gradle-4.10/src/messaging" />
                  <option value="E:/BigData/gradle-4.10/src/model-core" />
                  <option value="E:/BigData/gradle-4.10/src/model-groovy" />
                  <option value="E:/BigData/gradle-4.10/src/native" />
                  <option value="E:/BigData/gradle-4.10/src/osgi" />
                  <option value="E:/BigData/gradle-4.10/src/persistent-cache" />
                  <option value="E:/BigData/gradle-4.10/src/platform-base" />
                  <option value="E:/BigData/gradle-4.10/src/platform-jvm" />
                  <option value="E:/BigData/gradle-4.10/src/platform-native" />
                  <option value="E:/BigData/gradle-4.10/src/platform-play" />
                  <option value="E:/BigData/gradle-4.10/src/plugin-development" />
                  <option value="E:/BigData/gradle-4.10/src/plugin-use" />
                  <option value="E:/BigData/gradle-4.10/src/plugins" />
                  <option value="E:/BigData/gradle-4.10/src/process-services" />
                  <option value="E:/BigData/gradle-4.10/src/publish" />
                  <option value="E:/BigData/gradle-4.10/src/reporting" />
                  <option value="E:/BigData/gradle-4.10/src/resources" />
                  <option value="E:/BigData/gradle-4.10/src/resources-gcs" />
                  <option value="E:/BigData/gradle-4.10/src/resources-http" />
                  <option value="E:/BigData/gradle-4.10/src/resources-s3" />
                  <option value="E:/BigData/gradle-4.10/src/resources-sftp" />
                  <option value="E:/BigData/gradle-4.10/src/scala" />
                  <option value="E:/BigData/gradle-4.10/src/signing" />
                  <option value="E:/BigData/gradle-4.10/src/test-kit" />
                  <option value="E:/BigData/gradle-4.10/src/testing-base" />
                  <option value="E:/BigData/gradle-4.10/src/testing-junit-platform" />
                  <option value="E:/BigData/gradle-4.10/src/testing-jvm" />
                  <option value="E:/BigData/gradle-4.10/src/testing-native" />
                  <option value="E:/BigData/gradle-4.10/src/tooling-api" />
                  <option value="E:/BigData/gradle-4.10/src/tooling-api-builders" />
                  <option value="E:/BigData/gradle-4.10/src/tooling-native" />
                  <option value="E:/BigData/gradle-4.10/src/version-control" />
                  <option value="E:/BigData/gradle-4.10/src/workers" />
                  <option value="E:/BigData/gradle-4.10/src/wrapper" />
                  <option value="E:/BigData/gradle-4.10/lib/ant-1.9.11.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/ant-launcher-1.9.11.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-api-metadata-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-base-services-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-base-services-groovy-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-build-cache-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-build-option-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-cli-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-core-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-core-api-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-docs-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-installation-beacon-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-jvm-services-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-kotlin-dsl-1.0-rc-3.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-kotlin-dsl-provider-plugins-1.0-rc-3.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-kotlin-dsl-tooling-builders-1.0-rc-3.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-kotlin-dsl-tooling-models-1.0-rc-3.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-launcher-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-logging-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-messaging-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-model-core-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-model-groovy-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-native-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-persistent-cache-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-process-services-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-resources-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-runtime-api-info-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-tooling-api-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/gradle-wrapper-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/groovy-all-2.4.15.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-announce-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-antlr-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-build-cache-http-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-build-comparison-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-build-init-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-code-quality-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-composite-builds-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-dependency-management-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-diagnostics-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-ear-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-ide-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-ide-native-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-ide-play-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-ivy-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-jacoco-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-javascript-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-language-groovy-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-language-java-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-language-jvm-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-language-native-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-language-scala-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-maven-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-osgi-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-platform-base-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-platform-jvm-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-platform-native-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-platform-play-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-plugin-development-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-plugin-use-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-plugins-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-publish-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-reporting-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-resources-gcs-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-resources-http-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-resources-s3-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-resources-sftp-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-scala-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-signing-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-test-kit-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-testing-base-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-testing-junit-platform-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-testing-jvm-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-testing-native-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-tooling-api-builders-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-tooling-native-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-version-control-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/gradle-workers-4.10.jar" />
                  <option value="E:/BigData/gradle-4.10/lib/plugins/ivy-2.2.0.jar" />
                  <option value="$PROJECT_DIR$/buildSrc/src/main/java" />
                  <option value="$PROJECT_DIR$/buildSrc/src/main/groovy" />
                </list>
              </option>
            </ExternalProjectBuildClasspathPojo>
          </value>
        </entry>
      </map>
    </option>
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="-8" />
    <option name="y" value="-8" />
    <option name="width" value="1382" />
    <option name="height" value="744" />
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="spring-boot" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="spring-boot" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="src" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="spring-boot" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="src" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="main" />
              <option name="myItemType" value="org.jetbrains.plugins.gradle.projectView.GradleTreeStructureProvider$GradleSourceSetDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="spring-boot" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="src" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="main" />
              <option name="myItemType" value="org.jetbrains.plugins.gradle.projectView.GradleTreeStructureProvider$GradleSourceSetDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="resources" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="source" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="spring-boot" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="src" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="main" />
              <option name="myItemType" value="org.jetbrains.plugins.gradle.projectView.GradleTreeStructureProvider$GradleSourceSetDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="java" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="weishuai" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="Scratches" />
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="editor.preferences.import" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="nodejs_interpreter_path" value="E:/ZhuangJiRuanJian/nodeJs/node" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
      <method />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
      <method />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
      <method />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="183d473b-537b-439c-8647-2a9b8c1f590c" name="Default" comment="" />
      <created>1536532962545</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1536532962545</updated>
      <workItem from="1536532965658" duration="1928000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="1928000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1382" height="744" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Nl-Palette" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Properties" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Spring" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Run with VisualVM" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.24962178" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Bean Validation" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Gradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Debug with VisualVM" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="processedProjectFiles" value="true" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/controller/IndexController.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="171">
          <caret line="14" column="13" lean-forward="false" selection-start-line="14" selection-start-column="13" selection-end-line="14" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/controller/ViewController.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="171">
          <caret line="10" column="13" lean-forward="false" selection-start-line="10" selection-start-column="13" selection-end-line="10" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/controller/UserController.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="186">
          <caret line="17" column="13" lean-forward="false" selection-start-line="17" selection-start-column="13" selection-end-line="17" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/controller/TestController.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="190">
          <caret line="13" column="13" lean-forward="false" selection-start-line="13" selection-start-column="13" selection-end-line="13" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/service/UserService.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="133">
          <caret line="7" column="17" lean-forward="false" selection-start-line="7" selection-start-column="17" selection-end-line="7" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/service/impl/UserServiceImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="152">
          <caret line="13" column="13" lean-forward="false" selection-start-line="13" selection-start-column="13" selection-end-line="13" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/service/impl/PageHelperServiceImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="152">
          <caret line="14" column="13" lean-forward="false" selection-start-line="14" selection-start-column="13" selection-end-line="14" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build.gradle">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="95">
          <caret line="20" column="160" lean-forward="false" selection-start-line="20" selection-start-column="84" selection-end-line="20" selection-end-column="160" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/com/weishuai/service/impl/AsyncServiceImpl.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="225">
          <caret line="12" column="13" lean-forward="false" selection-start-line="12" selection-start-column="13" selection-end-line="12" selection-end-column="13" />
          <folding>
            <element signature="imports" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>